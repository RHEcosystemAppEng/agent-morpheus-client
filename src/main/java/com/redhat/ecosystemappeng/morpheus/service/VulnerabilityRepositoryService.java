package com.redhat.ecosystemappeng.morpheus.service;

import java.util.List;

import com.redhat.ecosystemappeng.morpheus.model.PaginatedResult;
import com.redhat.ecosystemappeng.morpheus.model.Pagination;
import com.redhat.ecosystemappeng.morpheus.model.SortField;
import com.redhat.ecosystemappeng.morpheus.model.SortType;
import com.redhat.ecosystemappeng.morpheus.model.Vulnerability;

import io.quarkus.mongodb.panache.PanacheMongoRepositoryBase;
import io.quarkus.mongodb.panache.PanacheQuery;
import io.quarkus.panache.common.Page;
import io.quarkus.panache.common.Sort;
import io.quarkus.panache.common.Sort.Direction;
import jakarta.enterprise.context.ApplicationScoped;

@ApplicationScoped
public class VulnerabilityRepositoryService implements PanacheMongoRepositoryBase<Vulnerability, String> {

  private PanacheQuery<Vulnerability> buildQuery(List<SortField> sortFields) {
    var sort = Sort.empty();
    if (sortFields != null) {
      sortFields.forEach(sf -> {
        var field = sf.field();
        if(RepositoryConstants.ID_SORT.equals(field)) {
          field = RepositoryConstants.ID_KEY;
        }
        if (SortType.ASC.equals(sf.type())) {
          sort.and(field, Direction.Ascending);
        } else {
          sort.and(field, Direction.Descending);
        }

      });
    }
    return findAll(sort);
  }

  public PaginatedResult<Vulnerability> find(List<SortField> sortFields, Pagination pagination) {
    var query = buildQuery(sortFields);
    long count = query.count();
    var results = query.page(Page.of(pagination.page(), pagination.size()));

    return new PaginatedResult<>(count, results.pageCount(), results.stream());
  }

}
