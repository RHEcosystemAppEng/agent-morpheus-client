---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: morpheus-client-on-push
  annotations:
    # The event we are targeting as seen from the webhook payload
    # this can be an array too, i.e: [pull_request, push]
    pipelinesascode.tekton.dev/on-event: "[push]"

    # The branch or tag we are targeting (ie: main, refs/tags/*)
    pipelinesascode.tekton.dev/on-target-branch: "[main]"

    # Fetch the git-clone task from hub, we are able to reference later on it
    # with taskRef and it will automatically be embedded into our pipeline.
    pipelinesascode.tekton.dev/task: "git-clone"

    # How many runs we want to keep.
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    # The variable with brackets are special to Pipelines as Code
    # They will automatically be expanded with the events from Github.
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: output-image
      value: quay.io/ecosystem-appeng/agent-morpheus-client:latest
    - name: path-context
      value: .
    - name: dockerfile
      value: ./src/main/docker/Dockerfile.multi-stage
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: output-image
        description: Fully Qualified Output Image
        type: string
      - name: path-context
        default: .
        description: Path to the source code of an application's component from where to build image.
        type: string
      - name: dockerfile
        default: Dockerfile
        description: Path to the Dockerfile inside the context specified by parameter path-context
        type: string
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskRef:
          resolver: cluster
          params:
            - name: kind
              value: task
            - name: name
              value: git-clone
            - name: namespace
              value: openshift-pipelines
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: URL
            value: $(params.repo_url)
          - name: REVISION
            value: $(params.revision)
      - name: buildah
        runAfter:
          - fetch-repository
        params:
          - name: IMAGE
            value: $(params.output-image)
          - name: DOCKERFILE
            value: $(params.dockerfile)
          - name: CONTEXT
            value: $(params.path-context)
          - name: BUILDER_IMAGE
            value: >-
              registry.redhat.io/rhel8/buildah@sha256:aac6629389db17e99894c5bee0da01d4c8065d11d8c6f6e1602f9484290baa70
        taskRef:
          resolver: cluster
          params:
            - name: kind
              value: task
            - name: name
              value: buildah
            - name: namespace
              value: openshift-pipelines
        workspaces:
          - name: source
            workspace: source
          - name: dockerconfig
            workspace: dockerconfig-ws
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  # This workspace will inject secret to help the git-clone task to be able to
  # checkout the private repositories
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
  - name: dockerconfig-ws
    secret:
      secretName: redhat-quay-registry-secret
